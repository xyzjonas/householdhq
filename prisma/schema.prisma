// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
}


model Category {
  id            Int     @id @default(autoincrement())
  name          String  @unique
  description   String?
  icon          String?
  color         String?

  transactions  Transaction[]

  @@map("category")
}


model Tag {
  id            Int     @id @default(autoincrement())
  name          String  @unique
  description   String?
  icon          String?
  color         String?

  parentId      Int?
  parentTag     Tag?    @relation("TagHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  childTags     Tag[]   @relation("TagHierarchy")

  transactions  Transaction[]

  @@map("tag")
  @@index([parentId])
}

model SourceState {
  id              Int           @id @default(autoincrement())
  created         DateTime      @updatedAt
  amount          Float
  sourceId        Int
  source          Source        @relation(fields: [sourceId], references: [id])

  @@index([sourceId])
}


model Source {
  id                Int           @id @default(autoincrement())
  name              String
  transactionsIn    Transaction[] @relation(name: "source")
  transactionsOut   Transaction[] @relation(name: "target")
  isOut             Boolean       @default(false)  // mark 'source' as output (not owned)
  isDisponible      Boolean       @default(false)  // mark 'source' as disponible (available to spend)
  isPortfolio       Boolean       @default(false)  // mark 'source' as a part of the portfolio
  states            SourceState[]
  color             String?
}
  
  
model Transaction {
  id              Int         @id @default(autoincrement())
  created         DateTime    @updatedAt
  transactedAt    DateTime?
  description     String
  amount          Float
  currency        String
  cancelled       Boolean     @default(false)
  confirmed       Boolean     @default(true)
  recurring       Int         @default(0)  // recurring each n months

  isImportant     Boolean @default(false)  // mark as an important reminder/tracker
  
  categoryId      Int?
  category        Category?   @relation(fields: [categoryId], references: [id])

  sourceId        Int
  source          Source      @relation(name: "source", fields: [sourceId], references: [id])

  targetId        Int         @default(2)
  target          Source      @relation(name: "target", fields: [targetId], references: [id])

  tags            Tag[]

  @@map("transaction")
  @@index([sourceId])
  @@index([targetId])
  @@index([categoryId])
}
